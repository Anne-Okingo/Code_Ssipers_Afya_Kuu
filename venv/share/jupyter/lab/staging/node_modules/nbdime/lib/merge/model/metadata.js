// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
'use strict';
import { createPatchStringDiffModel, createDirectStringDiffModel, } from '../../diff/model';
import { ObjectMergeModel, DecisionStringDiffModel } from './common';
import { JSONExt } from '@lumino/coreutils';
/**
 * Model of a merge of metadata with decisions
 */
export class MetadataMergeModel extends ObjectMergeModel {
    constructor(base, decisions) {
        super(base, decisions, 'application/json');
    }
    serialize() {
        if (!this.merged || this.merged.remote === null) {
            throw new Error('Missing notebook metadata merge data.');
        }
        // This will check whether metadata is valid JSON.
        // Validation of compatibility vs notebook format
        // will happen on server side.
        return JSON.parse(this.merged.remote);
    }
    createDiffModel(diff) {
        if (diff && diff.length > 0) {
            return createPatchStringDiffModel(this.base, diff);
        }
        else {
            const baseCopy = JSONExt.deepCopy(this.base);
            return createDirectStringDiffModel(baseCopy, baseCopy);
        }
    }
    createMergedDiffModel() {
        return new DecisionStringDiffModel(this.base, this.decisions, [
            this.local,
            this.remote,
        ]);
    }
}
//# sourceMappingURL=metadata.js.map