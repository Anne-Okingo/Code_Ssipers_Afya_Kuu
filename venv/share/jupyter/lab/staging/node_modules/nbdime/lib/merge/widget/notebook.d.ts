import type * as nbformat from '@jupyterlab/nbformat';
import { MergePanel } from '../../common/basepanel';
import type { IMergeViewOptions, IMimeDiffWidgetOptions } from '../../common/interfaces';
import type { NotebookMergeModel } from '../model';
import { MetadataMergeWidget } from './metadata';
import { CellMergeWidget } from './cell';
import { CellsDragDrop, ChunkedCellsWidget } from './dragdrop';
/**
 * NotebookMergeWidget
 */
export declare class NotebookMergeWidget extends MergePanel<NotebookMergeModel> {
    constructor({ rendermime, ...options }: IMimeDiffWidgetOptions<NotebookMergeModel> & IMergeViewOptions);
    /**
     * Start adding sub-widgets.
     *
     * Separated from constructor to allow 'live' adding of widgets
     */
    init(): Promise<void>;
    validateMerged(candidate: nbformat.INotebookContent): nbformat.INotebookContent;
    /**
     * Get the model for the widget.
     *
     * #### Notes
     * This is a read-only property.
     */
    get model(): NotebookMergeModel;
    protected onDragDropMove(sender: CellsDragDrop, args: CellsDragDrop.IMovedArgs): void;
    protected onChunkResolved(sender: ChunkedCellsWidget, args: void): void;
    protected metadataWidget: MetadataMergeWidget | null;
    protected cellWidgets: CellMergeWidget[];
    protected cellContainer: CellsDragDrop;
    private _rendermime;
}
//# sourceMappingURL=notebook.d.ts.map